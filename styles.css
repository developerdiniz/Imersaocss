/* soft reset do css */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

body {
    /*cor de fundo*/
    background-image: linear-gradient(to left,#000080,#000000);
    background-size: auto 100vh; 
    /*formatando o fundo, o auto vai deixar a largura no automatico e o vh = porcentagem do altura*/
    height: 100vh;
    /*mudar o estilo da fonte*/
    /*font baixada do google fonts*/
    font-family: 'Playfair Display SC', serif;
}

/* criar uma função como se fosse um if, para dar responsividade*/
/*se a tela tiver pelo menos 400px vai carregar estes estilos*/
@media (min-width: 400px) {
    body {
        font-size:14px;
    }
}
/* breakpoint */
@media (min-width: 600px) {
    body {
      background-attachment: fixed;
      background-size: cover;
      font-size: 18px;
    }
  }
  
  /* breakpoint */
  @media (min-width: 1200px) {
    body {
     
      font-size: 20px;
    }
  }

header{
    height: 80vh;
    display: flex;
    /*centralizar horizontalmente*/
    justify-content: center;
    /*centralizar verticalmente*/
    align-items: center;
}

.menu {
    /*la no html criamos uma classe menu, aqui chamamos ela e modificamos, nesse exemplo mudamos a cor do background*/
    background-color: white;
    /*deixar o menu fixo na pagina*/
    position: fixed;
    width: 100vw;
    /*definir a altra do position*/
    top:0;
    z-index: 1;
}
.menu ul {
    /*colocar todas as opções do menu em linha e não em coluna*/
    display: flex;
    /*dar espaço de uma opção a outra*/
    justify-content: space-around;
}
.menu li {
    /*acessar a lista do menu para tirar as bolinhas da lista*/
    list-style: none;
}

.menu a{
    display: block;
    /*aumentar a area de clique*/
    padding: 10px 20px;
    transition: background-color 1s, color 2s;
}

.menu a:active,
.menu a:hover {
    /*colocar sombra quando passar o mouse no menu*/
    background-color: #000080;
    color: white;
}

a {
    /*usamos uma funçao para tirar o sublinhado do link ('a') que por padrão já vem. Tambem podemos colocar sublinhado onde não tem*/
    color: #000080;
    text-decoration: none;
}
/*e aqui acrescentamos o underline quando o mouse passar em cima de 'a'*/
a:hover {
    text-decoration: underline;
}

.titulo {
    transform: scale(0.2) translateY(50vh);
    opacity: 0;
    animation: 1s ease 500ms animacaoTitulo forwards;
  }
  
  @keyframes animacaoTitulo {
    from {
      transform: scale(0.2) translateY(50vh);
      opacity: 0;
    }
    to {
      transform: scale(1) translateY(0);
      opacity: 1;
    }
  }

/*quando temos duas variaveis que vão receber os mesmo valores, podemos chamar as duas separando por virgula*/
.site-subtitle,
.site-title {
    font-family: 'Sigmar One', cursive;
    color: whitesmoke;
    text-align: center;
    font-size: 40px;
}

/*e aqui damos continuidade no que vai ter em apenas uma das variaveis*/
.site-subtitle {
    font-style: italic;
    /*atribuir uma altura de linha de uma frase á outra*/
    line-height: 50px;
    
}

.sobre,
.contato,
.certificado{
    padding: 2em;
    min-height: 100vh;
}

@media(min-width: 1200px){
    .container{
        margin-right: auto;
        margin-left: auto;
        max-width: 1200px;
    }
}
.sobre h2,
.contato h2,
.certificado h2{
    color: white;
    font-size: 2em;
    font-family: 'Playfair Display SC', serif;
    margin-bottom: 2em;
}

.sobre p {
    color: white;
    text-indent:1.4em;
    margin-bottom: 1.4em;
    font-family: 'Sigmar One', cursive;
    text-align: justify;
}
.sobre b {
    color: white;
    font-size: 1em;
    padding: 1em;
    font-family: 'Sigmar One', cursive;
}

.sobre .avatar {
    height: 180px;
    width: 180px;
    object-fit: cover;
    object-position: left bottom;
    transition: transform 500ms;
    float: left;
}
@media (min-width: 600px){
    .sobre .avatar{
        clip-path: polygon(100% 0%, 75% 50%, 100% 100%, 25% 100%, 0% 50%, 25% 0%);
        float: right;
}

.certificado .grid {
    display: grid;
    gap: 2em;
}

/*uma condição para configurar as figuras na tela para tela apartir de 550px*/
@media (min-width: 550px){
    .certifcado .grid {
        grid-template-columns: 240px 240px;
    }
}
/*uma condição para configurar as figuras na tela para tela apartir de 880px*/
@media (min-width: 880px){
    .certificado .grid {
        /*ao inves de escrever o valor de px varias vezes, vamos usar uma função */
        grid-template-columns: repeat(3, 260px);
        justify-content: center;
        align-content: center;
        
    }
}

.certificado figure {
    text-align:  center;
}

.img-certificado {
    height: 200px;
    width: 220px;
    object-fit: cover;
    transition: transform 500ms ;
 

}
.img-certificado:hover{
    transform: scale(1.2);
}

.contato .icons{
    text-align: center;

}

.contato a {

    padding: 0.5em;
    color: white;
    font-size: 8em;
    transition: text-shadow 1s;
}

.contato a:active,
.contato a:hover {
    text-decoration: none;
    text-shadow: 0px 0px 20px rgb(57, 193, 235);
}

.card{
    position: relative;
    transform-style: preserve-3d;
    transition: transform 1s;

}
.card:hover{
    transform: rotateY(180deg);

}
.card-front,
.card-back {
    left: 0;
    top: 0;
    position: absolute;
    backface-visibility: hidden;
}
.card-back{
    background-color: whitesmoke;
    height: 200px;
    width: 220px;
    transform: rotateY(180deg);
}

.flip-card {
    perspective: 500px;
}

.flip-car:hover .card {
    transform: rotateY(180deg);

}